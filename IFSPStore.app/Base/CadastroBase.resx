<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACgkAAAJNU0Z0AUkBTAIBAQIB
        AAFQAQABUAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBoAA0MBdwNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkD
        VwG5A08BmRgAAwUBBgMAAf8DAAH/AwAB/wMcASf/ABEAA08B6gNQAZ8DHQEpAx0BKQMdASkDHQEpAx0B
        KQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQM6AWEDAAH/FAADXgHVAwoB/gQAA1wB
        1wMAAf8DHAEn/wAQAAH/JwAB/wNTAesDOwFjEAADWQHAAx0BKRAAA1UB5AMyAfcIAANcAdcDAAH/Ax0B
        KP8ADAAB/yQAA1oB4AMcAScDTQGTAwAB/wMvAfYIAANVAa8DJAE0EAADEgEYAwAB/wNcAdYIAANcAdcD
        AAH/AxwBJ/8ACAAB/yQAAzQBUwNRAaQDOQFeAx4B+gNAAXEDMgH3BAADVQGvAyQBNBQAAx0BKAMAAf8D
        XAHWCAADXAHXAwAB/wMcASf/AAQAAf8rAAH/Ax4B+ggAA0ABcQMvAfYDVQGvAyQBNBgAAx0BKAMAAf8D
        XAHWCAADXAHXAwAB/wMdASj/AAH/BwAB/wMAAf8DAAH/A04BmAMLAQ4DPwFuAz8BbgM/AW4EAANKAe4D
        SgGJDAADQAFxAwAB/wMkATQcAAMdASgDAAH/A1wB1ggAA1wB1wMAAf8DHAEn+wAB/wQAAz0B8wQAAyoB
        QANRAaEDDAEQA0MBdgNDAXYDQwF2CAADSgHuA0oBiQwAA0ABcQMvAfYgAAMdASgDAAH/A1wB1wgAA1wB
        1wMAAf8DHAEnBAAEAQM+AWoDVQGtA1UBrwNDAXYDBgEH2wAB/wQAAz0B8wQAAyoBQANRAaEDGQEiA1MB
        pgNTAaYDUwGmA1MBpgM/AWwEAANKAe4DSgGJDAADQAFxAy8B9iAAAx0BKAMAAf8DXAHXCAADXAHXAwAB
        /wMqAfgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DCgH+AxsBJdMAAf8HAAH/AwAB/wMAAf8DSwGMAwIB
        AwMpAT4DKQE+AykBPgMpAT4DFAEbCAADSgHuA0oBiQwAA0ABcQMvAfYgAAMdASgDAAH/A1wB1gQAAzcB
        WgMAAf8DHgH6AxgBIRAAAwsBDgNPAeoDAAH/A04BlM8AAf84AANKAe4DSgGJCAAEAQMAAf8DMgH3IAAD
        HQEoAwAB/wNaAd0DAAH/A1MBpyAAAz4BawMAAf8DRAF4ywAB/wQAA0QB8QNEAfEDRAHxAz0BaSgAA0oB
        7gNKAYkEAQMAAf8DHwEsA04BlgNFAXwgAAMdASgDAAH/A1sBzSgAA0wBjgMAAf8DAgEDxwAB/wQAAz0B
        8wQAAyoBQANRAaEDKQE+A1cB5QNXAeUDVwHlAwQBBRgAA0YB7wMAAf8DHwEsBAADKQE+A1UBrCAAA0kB
        hgMAAf8zAAH/A1wBy8cAAf8EAAM9AfMEAAMqAUADUQGhBAEDJgE4AyYBOAMmATgDJgE4AxEBFhQAA1UB
        rwMUAfwDVQGsAzMBUAMAAf8DCwEOIwAB/wNZAcEwAANEAXsDAAH/xwAB/wcAAf8DAAH/AwAB/wNSAaAD
        GwElA1UBrANVAawDVQGsA1UBrANBAXIUAANVAa8DJQE2Az0BaQNSAaADCgENJwAB/wMuAUgwAAMFAQYD
        AAH/xwAB/0AAA1UBrwMlATYzAAH/AxUBHTcAAf/HAAH/BAADSQGGA0kBhgNJAYYDHQEoLAADVQGvAyUB
        NjMAAf8DKQE+MAAEAQMAAf/HAAH/BAADMgH3AzkBXgNJAYYDUQGhAz0BaAMAAf8DAAH/AwAB/wMJAQwM
        AANGAYEDUgGjA1IBowNYAeIDJQE2MwAB/wNUAaswAAM7AWUDAAH/xwAB/wQAAz0B8wQAAyoBQANRAaEf
        AAH/A0UBfAMqAUADSwGMAwoB/jQAA1EBogMAAf8IAANZAcEDWQHjEAADUAGdAwoB/ggAAwoB/gNVAeTH
        AAH/BAADFAH9A1wB1wNcAeEDUQGhAzYBVwMAAf8DAAH/AwAB/wMAAf8DWwHQAxUBHQNbAdAEAAMwAUwD
        CgH+PwAB/wNSAaAEAAMUARsDAAH/AwAB/wNBAfIDVQHkAwAB/wMAAf8DOgFiBAADNwFaAwAB/wMMAQ/H
        AAH/BAADCwEOAwsBDgMLAQ4cAAMeASoDWQG7AzABTAMKAf5AAAM9AWkDAAH/AzsBYwgAA0IBdANXAeYD
        RAHxA04BlwQBBAADIwEyAwAB/wNVAa3LAAH/LAADHgEqA1UB5wMKAf5IAANPAZsDAAH/A1wB1wQBFAAD
        VgGzAwAB/wNbAc3MAAMmATgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DFAH9UAADJgE4AwAB/wMAAf8DAAH/A1wB4QNaAd0DAAH/AwAB/wMAAf8DOgFi/wBhAAMeASoD
        VQGvA0QB8QM5AfQDVwG8AyoBQNQAAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD
        /wEAAcABAAE/AQcC/wYAAYABAAEfASMC/wYAAb8B4wHPATEC/wYAAb8B4AHPARgC/wYAAb8B4AFPAYwB
        fwH/BgABvwHzAQ8BxgE/Af8GAAGgARMBjwHjAR8B/wYAAagBGQHPAfEBiAEfBgABqAEEAecB+AHAAQcG
        AAGgAQYBcwH8AUMBwwYAAb8B/wExAf4BDwHxBgABoQH/AYAB/wEfAfgGAAGoAQ8BxAH/AT8B/AYAAagB
        BwHAAf8BPwH8BgABoAEHAcEB/wE/AfwGAAG/Af8BzwH/AT8B/gYAAaEB/wHPAf8BPwH8BgABoAEOAQ8B
        /wE/AfwGAAGpAfwBHwH/ATMBzAYAAaABAQE/Af8BkAEIBgABowH4AX8B/wGMAREGAAG/AfgC/wHDAeMG
        AAGAAQEC/wHgAQcGAAT/AfgBHwYACw==
</value>
  </data>
</root>